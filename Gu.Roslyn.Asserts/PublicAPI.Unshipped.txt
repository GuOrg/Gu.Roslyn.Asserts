static Gu.Roslyn.Asserts.RoslynAssert.Diagnostics(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer analyzer, Gu.Roslyn.Asserts.ExpectedDiagnostic expectedDiagnostic, System.Collections.Generic.IReadOnlyList<string> code, Gu.Roslyn.Asserts.AllowCompilationErrors allowCompilationErrors = Gu.Roslyn.Asserts.AllowCompilationErrors.No, System.Collections.Generic.IEnumerable<string> suppressWarnings = null, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> metadataReferences = null, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions compilationOptions = null) -> void
static Gu.Roslyn.Asserts.RoslynAssert.Diagnostics(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer analyzer, Gu.Roslyn.Asserts.ExpectedDiagnostic expectedDiagnostic, string code, Gu.Roslyn.Asserts.AllowCompilationErrors allowCompilationErrors = Gu.Roslyn.Asserts.AllowCompilationErrors.No, System.Collections.Generic.IEnumerable<string> suppressWarnings = null, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> metadataReferences = null, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions compilationOptions = null) -> void
static Gu.Roslyn.Asserts.RoslynAssert.NoFix(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer analyzer, Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider fix, Gu.Roslyn.Asserts.ExpectedDiagnostic expectedDiagnostic, string code, Gu.Roslyn.Asserts.AllowCompilationErrors allowCompilationErrors = Gu.Roslyn.Asserts.AllowCompilationErrors.No, System.Collections.Generic.IEnumerable<string> suppressWarnings = null, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> metadataReferences = null, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions compilationOptions = null) -> void
